<?xml version='1.0'?>
<!--
Explanation:
============

<patterns>
	The outermost tag. It contains the different (design) patterns.

<pattern>
	A pattern contains the nodes and relations between those nodes in a pattern. Different variations of a design
	pattern are treated as different templates of the same family. A pattern has a descriptive name.

<nodes>
    A list of <node> elements.

<node>
	Defines a node used in the pattern with a id unique per pattern. This id is also the classtype this node
	represents in the model. The name attribute is optional. When omitted, the id is also used here.

<node.rule>
    A <node> can have multiple rules. A <node.rule> has ont type of attribute, which is mandatory: nodeType. A nodeType
    can have the following values:
    - 'CONCRETE_CLASS', 'INTERFACE', or 'ABSTRACT_CLASS' which are mutually exclusive
    - 'CLASS_WITH_PRIVATE_CONSTRUCTOR' which can be combined with 'CONCRETE_CLASS' or 'ABSTRACT_CLASS'
    No duplicate values are allowed!

<relations>
    A list of <relation> elements.

<relation>
	A relation must have an id, which is unique per pattern. The attributes node1 and node2 represent the nodes of
	(abstract) classes or interfaces in a relationship. They refer to nodes that must be defined earlier in the
	<nodes> element.

<relation.rule>
	A <relation> can have multiple rules (but no duplicates!). The relationType attribute defines the kind of relation
	between the nodes:
	- ASSOCIATES_WITH
	- DEPENDS_ON
	- INHERITS_FROM
	- IMPLEMENTS
	- HAS_ATTRIBUTE_OF
	- CREATES_INSTANCE_OF
	- HAS_METHOD_PARAMETER_OF_TYPE
	- HAS_METHOD_RETURNTYPE
	- CALLS_METHOD_OF
	- OVERRIDES_METHOD_OF
	The de categorie groups the rules into sets that can be enabled or disabled by the user during analysis. The
	following catgories are possible:
	- RELATIONS
	- ATTRIBUTES
	- METHODS
	The description is optional and is used in feedback after analysis. The attributes cardinalityLeft and
	cardinalityRight are also optional and will be defaulted to 1 by the application.

-->
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'>

    <xs:simpleType name='nodeType'>
        <xs:restriction base='xs:normalizedString'>
            <xs:enumeration value='ABSTRACT_CLASS'/>
            <xs:enumeration value='CONCRETE_CLASS'/>
            <xs:enumeration value='INTERFACE'/>
            <xs:enumeration value='CLASS_WITH_PRIVATE_CONSTRUCTOR'/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name='node.rule'>
        <xs:complexType>
            <xs:attribute name='nodeType' type='nodeType' use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name='node'>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref='node.rule' minOccurs='1' maxOccurs='unbounded'/>
            </xs:sequence>
            <xs:attribute name='id' type='xs:string' use="required"/>
            <xs:attribute name='name' type='xs:string'/>
        </xs:complexType>
    </xs:element>

    <xs:element name='nodes'>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref='node' minOccurs='1' maxOccurs='unbounded'/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name='relationType'>
        <xs:restriction base='xs:normalizedString'>
            <xs:enumeration value='ASSOCIATES_WITH'/>
            <xs:enumeration value='DEPENDS_ON'/>
            <xs:enumeration value='INHERITS_FROM'/>
            <xs:enumeration value='IMPLEMENTS'/>
            <xs:enumeration value='HAS_ATTRIBUTE_OF'/>
            <xs:enumeration value='CREATES_INSTANCE_OF'/>
            <xs:enumeration value='HAS_METHOD_PARAMETER_OF_TYPE'/>
            <xs:enumeration value='HAS_METHOD_RETURNTYPE'/>
            <xs:enumeration value='CALLS_METHOD_OF'/>
            <xs:enumeration value='OVERRIDES_METHOD_OF'/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name='relation.rule'>
        <xs:complexType>
            <xs:attribute name='relationType' type='relationType' use="required"/>
            <xs:attribute name='cardinalityLeft' type='xs:string'/>
            <xs:attribute name='cardinalityRight' type='xs:string'/>
        </xs:complexType>
    </xs:element>

    <xs:element name='relation'>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref='relation.rule' minOccurs='1' maxOccurs='unbounded'/>
            </xs:sequence>
            <xs:attribute name='node1' type='xs:string' use="required"/>
            <xs:attribute name='node2' type='xs:string' use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name='relations'>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref='relation' minOccurs='1' maxOccurs='unbounded'/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name='pattern'>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref='nodes' minOccurs='1' maxOccurs='1'/>
                <xs:element ref='relations' minOccurs='1' maxOccurs='1'/>
            </xs:sequence>
            <xs:attribute name='name' type='xs:string' use="required"/>
            <xs:attribute name='family' type='xs:string' use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name='patterns'>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref='pattern' minOccurs='1' maxOccurs='unbounded'/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>