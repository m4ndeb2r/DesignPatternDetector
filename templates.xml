<?xml version="1.0" encoding="UTF-8"?>
<!--
     Explanation:
     ============
     node1 and node2 are names of (abstract)classes or interfaces

     possible values of type are:
       -  ASSOCIATION             bidirectional association
       -  ASSOCIATION_DIRECTED    unidirectional association  from node1 to node 2
       -  AGGREGATE               node2 is the aggregate
       -  COMPOSITE               node2 is the composite
       -  INHERITANCE             node2 is the superclass or (super)interface
                                  node1 is a subclass or subinterface which may
				  have relations to other classes/interfaces
				  
       -  INHERITANCE_MULTI       node2 is the superclass or (super)interface
                                  node1 is the subclass.
				  node2 may have more subclasses than the template defines,
				  and none of them may have relations to other classes/interfaces.
       -  DEPENDENCY		  node1 depends on node2
       
     There are 23 GoF design patterns.
     Beneath are 16 GoF design patterns which can be detected.
     The structures of the state pattern and the strategy pattern are identical.
     The 6 remaining patterns have implementing issues, which can not be denoted by the structure beneath.

     TODO: Prototype is not available in this templates file. Add it?
     <template name ="Prototype">
         <edge node1="Client"                    node2="Prototype"                 type="ASSOCIATION_DIRECTED"/>
         <edge node1="ConcretePrototype"         node2="Prototype"                 type="INHERITANCE_MULTI"/>
     </template>

-->


<templates>
   <template name="AbstractFactory">
       <edge node1="Client"                    node2="AbstractFactory"           type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="AbstrProdA"                type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="AbstrProdB"                type="ASSOCIATION_DIRECTED"/>       
       <edge node1="ConcreteFact1"             node2="AbstractFactory"           type="INHERITANCE"/>
       <edge node1="ConcreteFact2"             node2="AbstractFactory"           type="INHERITANCE"/>
       <edge node1="ConcreteFact1"             node2="Prod1A"                    type="DEPENDENCY"/>
       <edge node1="ConcreteFact2"             node2="Prod2A"                    type="DEPENDENCY"/>
       <edge node1="ConcreteFact1"             node2="Prod1B"                    type="DEPENDENCY"/>
       <edge node1="ConcreteFact2"             node2="Prod2B"                    type="DEPENDENCY"/>
       <edge node1="Prod1A"                    node2="AbstrProdA"                type="INHERITANCE"/>
       <edge node1="Prod2A"                    node2="AbstrProdA"                type="INHERITANCE"/>
       <edge node1="Prod1B"                    node2="AbstrProdB"                type="INHERITANCE"/>
       <edge node1="Prod2B"                    node2="AbstrProdB"                type="INHERITANCE"/>
   </template>			               			                 
				               			                 
   <template name ="Adapter">	               			                 
       <edge node1="Client"                    node2="Target"                    type="ASSOCIATION_DIRECTED"/>
       <edge node1="Adapter"                   node2="Target"                    type="INHERITANCE"/>
       <edge node1="Adapter"                   node2="Adaptee"                   type="ASSOCIATION_DIRECTED"/>
   </template>			               			                 
				               			                 
   <template name ="Bridge">	               			                 
       <edge node1="Client"                    node2="Abstraction"               type="ASSOCIATION_DIRECTED"/>
       <edge node1="RefinedAbstraction"        node2="Abstraction"               type="INHERITANCE_MULTI"/>
       <edge node1="Implementor"               node2="Abstraction"               type="AGGREGATE"/>
       <edge node1="ConcreteImplementor"       node2="Implementor"               type="INHERITANCE_MULTI"/>
   </template>

   <template name ="Builder">	               			                 
       <edge node1="Builder"                   node2="Director"                  type="AGGREGATE"/>
       <edge node1="ConcreteBuilder"           node2="Builder"                   type="INHERITANCE"/>
       <edge node1="ConcreteBuilder"           node2="Product"                   type="DEPENDENCY"/>
   </template>							                 
								                 
   <template name ="ChainOfResponsibility">			                 
       <edge node1="ConcreteHandler"           node2="Handler"                   type="INHERITANCE_MULTI"/>
       <edge node1="Handler"                   node2="Handler"                   type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="Handler"                   type="ASSOCIATION_DIRECTED"/>
   </template>			               			                 
				               			                 
   <template name ="Command">	               			                 
       <edge node1="Client"                    node2="Receiver"                  type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="ConcreteCommand"           type="DEPENDENCY"/>
       <edge node1="ConcreteCommand"           node2="Receiver"                  type="ASSOCIATION_DIRECTED"/>
       <edge node1="ConcreteCommand"           node2="Command"                   type="INHERITANCE"/>
       <edge node1="Command"                   node2="Invoker"                   type="AGGREGATE"/>
   </template>			              				         
				              				         
   <template name ="Composite">
       <edge node1="Client"                    node2="Component"                 type="ASSOCIATION_DIRECTED"/>
       <edge node1="Leaf"                      node2="Component"                 type="INHERITANCE"/>
       <edge node1="Composite"                 node2="Component"                 type="INHERITANCE"/>
       <edge node1="Component"                 node2="Composite"                 type="AGGREGATE"/>
   </template>			              				        
				              				        
   <template name ="Decorator">	              				        
       <edge node1="ConcreteComponent"         node2="Component"                 type="INHERITANCE"/>
       <edge node1="Decorator"                 node2="Component"                 type="INHERITANCE"/>
       <edge node1="Component"                 node2="Decorator"                 type="AGGREGATE"/>
       <edge node1="ConcreteDecorator"         node2="Decorator"                 type="INHERITANCE_MULTI"/>
   </template>			              				        
				              				        
   <template name ="Factory Method">          				        
       <edge node1="ConcreteProduct"           node2="Product"                   type="INHERITANCE"/>
       <edge node1="ConcreteCreator"           node2="ConcreteProduct"           type="DEPENDENCY"/>
       <edge node1="ConcreteCreator"           node2="Creator"                   type="INHERITANCE"/>
   </template>

   <template name ="Flyweight">
       <edge node1="Client"                    node2="FlyweightFactory"          type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="ConcreteFlyweight"         type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="UnsharedConcreteFlyweight" type="ASSOCIATION_DIRECTED"/>
       <edge node1="Flyweight"                 node2="FlyweightFactory"          type="AGGREGATE"/>
       <edge node1="ConcreteFlyweight"         node2="Flyweight"                 type="INHERITANCE"/>
       <edge node1="UnsharedConcreteFlyweight" node2="Flyweight"                 type="INHERITANCE"/>
   </template>

   <template name ="Interpreter">
       <edge node1="Client"                    node2="AbstractExpression"        type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="Context"                   type="ASSOCIATION_DIRECTED"/>       
       <edge node1="TerminalExpression"        node2="AbstractExpression"        type="INHERITANCE"/>
       <edge node1="NonTerminalExpression"     node2="AbstractExpression"        type="INHERITANCE"/>
       <edge node1="AbstractExpression"        node2="NonTerminalExpression"     type="AGGREGATE"/>
   </template>			              				        

   <template name ="Iterator">
       <edge node1="ConcreteAggregate"         node2="Aggregate"                 type="INHERITANCE"/>
       <edge node1="Client"                    node2="Aggregate"                 type="ASSOCIATION_DIRECTED"/>
       <edge node1="Client"                    node2="Iterator"                  type="ASSOCIATION_DIRECTED"/>
       <edge node1="ConcreteIterator"          node2="Iterator"                  type="INHERITANCE"/>
       <edge node1="ConcreteIterator"          node2="ConcreteAggregate"         type="ASSOCIATION_DIRECTED"/>
       <edge node1="ConcreteAggregate"         node2="ConcreteIterator"          type="DEPENDENCY"/>
   </template>				       				         
					       				         
   <template name ="Mediator">		       				         
       <edge node1="ConcreteMediator"          node2="Mediator"                  type="INHERITANCE"/>
       <edge node1="Colleague"                 node2="Mediator"                  type="ASSOCIATION_DIRECTED"/>
       <edge node1="ConcreteColleague1"        node2="Colleague"                 type="INHERITANCE"/>
       <edge node1="ConcreteColleague2"        node2="Colleague"                 type="INHERITANCE"/>
       <edge node1="ConcreteMediator"          node2="ConcreteColleague1"        type="ASSOCIATION_DIRECTED"/>
       <edge node1="ConcreteMediator"          node2="ConcreteColleague2"        type="ASSOCIATION_DIRECTED"/>
   </template>				       				         
					       				         
   <template name ="Memento">		       				         
       <edge node1="Memento"                   node2="Caretaker"                 type="AGGREGATE"/>
       <edge node1="Originator"                node2="Memento"                   type="DEPENDENCY"/>
   </template>				       				         
					       				         
   <template name ="Observer">	       				         
       <edge node1="ConcreteSubject"           node2="Subject"                   type="INHERITANCE"/>
       <edge node1="Subject"                   node2="Observer"                  type="ASSOCIATION_DIRECTED"/>
       <edge node1="ConcreteObserver"          node2="Observer"                  type="INHERITANCE"/>
       <edge node1="ConcreteObserver"          node2="ConcreteSubject"           type="ASSOCIATION_DIRECTED"/>
   </template>				       
					       
   <template name ="Proxy">
       <edge node1="Client"                    node2="Subject"                   type="ASSOCIATION_DIRECTED"/>
       <edge node1="Proxy"                     node2="Subject"                   type="INHERITANCE"/>
       <edge node1="RealSubject"               node2="Subject"                   type="INHERITANCE"/>
       <edge node1="Proxy"                     node2="RealSubject"               type="ASSOCIATION_DIRECTED"/>
   </template>				       
					       
   <template name ="State - Strategy">
       <edge node1="Strategy"                  node2="Context"                   type="AGGREGATE"/>     
       <edge node1="ConcreteStrategy"          node2="Strategy"                  type="INHERITANCE_MULTI"/>
   </template>
 </templates>
    
